function [ X,Y,sum ] = beamforming(rm,p,z,res,Fs)
%[X,Y,map] = beamforming(rm,p,z,res,Fs)
%   Performs delay and sum beamforming on a plane surface with point
%   sources. The microphone array is located in the xy-plane (z=0) while the 
%   measured surface is assumed to be parallel to the microphone array
%   and is located z meters in front of it (z is the focus distance). The
%   algorithm calculates the phase delays assuming incident spherical
%   waves.
%
%   Input arguments:
%
%   rm - 3 x M matrix containing the microphone array geometry 
%        (x,y,z coordinates of the microphones, z=0), where M is the number
%        of microphones
%   p - Matrix containing the recorded microphone signals
%   z - focus distance (distance of the measured plane from the array)
%   res - resolution (number of points on the focus plane is res*res)
%   Fs - sampling frequency
%
%   Output arguments:
%
%   X,Y - meshgrid of focus plane coordinates (for later plotting)
%   map - noise map generated by the algorithm

c = 344; %speed of sound

%focus plane
L = tand(30)*z; %covered surface for opening angle=30
[X,Y] = meshgrid(linspace(-L,L,res),linspace(-L,L,res)); %indexes of plane points

%distances "r" - length of vectors pointing from array center to points of the focus plane
r = zeros(res,res);
r = sqrt(X.^2 + Y.^2 + z^2); %length of position vector r

%applied delays for each point on the surface at each mic - to be stored
delays = zeros(res,res,length(rm));
%distance from all points on the focus plane to a given mic (|r-rm|)
dist = zeros(res,res); 
for i = 1:length(rm) %for all mics
   dist = sqrt((X-rm(1,i)).^2 + (Y-rm(2,i)).^2 + z^2); %|r-rm|
   delays(:,:,i) = (r-dist)/c; % (|r|-|r-rm|)/c
end

%beamformed signals
%sum = cell(res,res);
sum = zeros(res^2,size(p,2));

%loop over all points on the focus plane
%for each mic, calculate the resulting sound pressure from the point
%sources, apply the delays and sum them up
for i = 1:res
    for j = 1:res
          
      for k = 1:length(rm)               
         y = delaysig(p(k,:),delays(i,j,k),Fs); %delay mic signals
         %y = p(k,:).*exp(-1i*2*pi*f*delays(i,j,k));         
         sum(res*(j-1) + i,:) = sum(res*(j-1) + i,:) + y; 
      end
            
      sum(res*(j-1) + i,:) = sum(res*(j-1) + i,:)/(length(rm)); 
    end
end


end

